// {{ file.path }} - Hono Application
// Generated from PRD requirements
{% if file.options.cors %}
// ADVICE: Configure CORS properly for your client applications
{% endif %}
{% if file.options.validation %}
// ADVICE: Add input validation middleware for all routes
{% endif %}
{% if file.options.auth %}
// ADVICE: Implement JWT or session-based authentication
{% endif %}

import { Hono } from 'hono';
{% if file.options.cors %}
import { cors } from 'hono/cors';
{% endif %}
{% if file.options.auth %}
import { jwt } from 'hono/jwt';
{% endif %}

const app = new Hono();

{% if file.options.cors %}
// Configure CORS
app.use('*', cors({
  origin: ['http://localhost:3000'], // TODO: Configure allowed origins
  allowHeaders: ['Content-Type', 'Authorization'],
  allowMethods: ['GET', 'POST', 'PUT', 'DELETE'],
}));
{% endif %}

{% if file.options.auth %}
// Authentication middleware
app.use('/api/*', jwt({
  secret: process.env.JWT_SECRET || 'your-secret-key', // TODO: Use environment variable
}));
{% endif %}

{% for function in functions %}
{% if function.name.upper() in ['GET', 'POST', 'PUT', 'DELETE', 'PATCH'] %}
app.{{ function.name.lower() }}('{{ function.path or "/api/route" }}', async (c) => {
  try {
    // TODO: {{ function.prd_references | join(', ') }} - {{ function.description }}

    {% if file.options.validation %}
    // Validate request data
    const data = await c.req.json();
    // TODO: Add validation logic
    {% endif %}

    {% if file.options.auth %}
    // Get authenticated user
    const payload = c.get('jwtPayload');
    const userId = payload?.sub;
    {% endif %}

    // Main business logic
    const result = await processRequest({% if file.options.validation %}data{% endif %}{% if file.options.auth %}{% if file.options.validation %}, {% endif %}userId{% endif %});

    return c.json(result);
  } catch (error) {
    console.error('API Error:', error);
    return c.json({ error: 'Internal server error' }, 500);
  }
});

{% else %}
{{ function.stub_code }}

{% endif %}
{% endfor %}

// Helper functions
async function processRequest({% if file.options.validation %}data: any{% endif %}{% if file.options.auth %}{% if file.options.validation %}, {% endif %}userId?: string{% endif %}) {
  // TODO: Implement main business logic
  throw new Error("Business logic not implemented");
}

export default app;
