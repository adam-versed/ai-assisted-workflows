// {{ file.path }} - Next.js API Route
// Generated from PRD requirements
{% if file.options.validation %}
// ADVICE: Implement input validation for all request data
{% endif %}
{% if file.options.auth %}
// ADVICE: Add authentication middleware to protect this endpoint
{% endif %}
{% if file.options.queue %}
// ADVICE: Consider background job processing for long-running operations
{% endif %}

import { NextRequest, NextResponse } from 'next/server';

{% for function in functions %}
{% if function.name == 'GET' or function.name == 'POST' or function.name == 'PUT' or function.name == 'DELETE' %}
export async function {{ function.name }}(request: NextRequest) {
  try {
    // TODO: {{ function.prd_references | join(', ') }} - {{ function.description }}

    {% if file.options.validation %}
    // Validate request data
    const body = await request.json();
    // Add validation logic here
    {% endif %}

    {% if file.options.auth %}
    // Check authentication
    // const user = await getCurrentUser(request);
    // if (!user) return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });
    {% endif %}

    // Main business logic
    const result = await processRequest({{ 'body' if function.name in ['POST', 'PUT'] else 'request' }});

    return NextResponse.json(result);
  } catch (error) {
    console.error('API Error:', error);
    return NextResponse.json(
      { error: 'Internal server error' },
      { status: 500 }
    );
  }
}

{% else %}
{{ function.stub_code }}

{% endif %}
{% endfor %}

// Helper functions
async function processRequest(data: any) {
  // TODO: Implement main business logic
  throw new Error("Business logic not implemented");
}
