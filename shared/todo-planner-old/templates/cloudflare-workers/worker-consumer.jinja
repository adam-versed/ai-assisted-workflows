{{ header }}
// Kind: worker-consumer
// Stack: cloudflare-workers

{% set opts = file.options | default({}) %}
{% set backoff = opts.retry in ['exponential', 'none'] %}
{% set dlq = opts.dlq == 'on' %}
{% set metrics = opts.metrics in ['basic', 'none'] %}

export default {
  async queue(batch, env, ctx) {
    // BEGIN-IMPL (keep)
  // TODO: Base
  // - ADVICE:WRK:BASE: Process messages idempotently; dedupe by correlation/idempotency key
  // - ADVICE:WRK:BASE: Bound concurrency via ctx.waitUntil and reasonable per-message timeouts
  {% if backoff %}
  // ADVICE:WRK:RETRY (when chosen)
  // - Use {{ opts.retry }} backoff on transient errors; cap attempts; avoid infinite retries
  {% endif %}
  {% if dlq %}
  // ADVICE:WRK:DLQ (when chosen)
  // - On permanent failure, emit to DLQ with reason and minimal context
  {% endif %}
  {% if metrics %}
  // ADVICE:WRK:OBS (when chosen)
  // - Emit basic metrics/logs per message (start/end/duration/outcome); no PII
  {% endif %}
    // END-IMPL
  }
}
