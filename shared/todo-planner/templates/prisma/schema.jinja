// {{ file.path }} - Prisma Database Schema
// Generated from PRD requirements
{% if file.options.multi_tenant %}
// ADVICE: Include tenant/user isolation fields for SaaS applications
{% endif %}
{% if file.options.relations %}
// ADVICE: Define proper relations between models
{% endif %}

// This is your Prisma schema file
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "{{ file.options.database or 'postgresql' }}"
  url      = env("DATABASE_URL")
}

{% for function in functions %}
{% if 'model' in function.name.lower() or 'table' in function.name.lower() %}
// TODO: {{ function.prd_references | join(', ') }} - {{ function.description }}
model {{ function.name.replace('Model', '').replace('Table', '') }} {
  id        String   @id @default(cuid())
  name      String
  description String?
  status    String   @default("active")

  {% if file.options.multi_tenant %}
  // Multi-tenant isolation (adapt field name: userId, organizationId, etc.)
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  {% endif %}

  {% if file.options.audit_fields %}
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  {% endif %}

  {% if file.options.soft_delete %}
  deletedAt DateTime?
  {% endif %}

  {% if file.options.multi_tenant %}
  @@index([tenantId])
  @@index([tenantId, status])
  {% if file.options.audit_fields %}
  @@index([tenantId, createdAt])
  {% endif %}
  {% endif %}
}

{% endif %}
{% endfor %}

{% if file.options.multi_tenant %}
model Tenant {
  id        String   @id @default(cuid())
  name      String
  authId    String   @unique // Maps to your auth provider

  {% if file.options.audit_fields %}
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  {% endif %}

  {% if file.options.soft_delete %}
  deletedAt DateTime?
  {% endif %}

  // Relations to other models
  {% for function in functions %}
  {% if 'model' in function.name.lower() or 'table' in function.name.lower() %}
  {{ function.name.replace('Model', '').replace('Table', '').lower() }}s {{ function.name.replace('Model', '').replace('Table', '') }}[]
  {% endif %}
  {% endfor %}

  @@index([authId])
}
{% endif %}

{% if not functions or not any('model' in f.name.lower() or 'table' in f.name.lower() for f in functions) %}
// Example model - replace with your actual models
model Document {
  id          String   @id @default(cuid())
  title       String
  content     String
  status      String   @default("active")

  {% if file.options.multi_tenant %}
  tenantId    String
  tenant      Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  {% endif %}

  {% if file.options.audit_fields %}
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  {% endif %}

  {% if file.options.soft_delete %}
  deletedAt   DateTime?
  {% endif %}

  {% if file.options.multi_tenant %}
  @@index([tenantId])
  @@index([tenantId, status])
  {% endif %}
}
{% endif %}
