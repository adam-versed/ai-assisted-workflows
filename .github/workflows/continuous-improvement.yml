name: Continuous Improvement - Code Duplication Detection

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  duplicate-detection:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for comprehensive analysis

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install CI dependencies
        run: |
          python -m pip install --upgrade pip
          pip install faiss-cpu transformers torch sentence-transformers numpy scipy
          pip install multilspy

      - name: Verify multilspy installation
        run: |
          python -c "import multilspy; print('multilspy library installed successfully')"

      - name: Get changed files
        id: changed-files
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.sha }} > changed_files.txt
          else
            git diff --name-only HEAD~1 HEAD > changed_files.txt
          fi
          echo "files=$(cat changed_files.txt | tr '\n' ' ')" >> $GITHUB_OUTPUT
          echo "Changed files:"
          cat changed_files.txt

      - name: Ensure CI registry directory exists
        run: |
          mkdir -p .ci-registry/reports
          mkdir -p .ci-registry/cache
          mkdir -p .ci-registry/backups
          # Copy config.json to registry_config.json if it doesn't exist
          if [ -f ".ci-registry/config.json" ] && [ ! -f ".ci-registry/registry_config.json" ]; then
            cp .ci-registry/config.json .ci-registry/registry_config.json
            echo "Copied config.json to registry_config.json"
          fi

      - name: Run duplicate detection
        run: |
          cd shared && PYTHONPATH=.. python ci/integration/orchestration_bridge.py \
            --project-root .. \
            --changed-files ${{ steps.changed-files.outputs.files }}

      - name: Upload analysis results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: duplication-analysis
          path: |
            .ci-registry/reports/
            .ci-registry/baseline-duplicates.json
          retention-days: 30

      - name: Collect diagnostic information
        if: failure()
        run: |
          echo "=== Diagnostic Information ==="
          echo "Python Version: $(python --version)"
          echo "Current Directory: $(pwd)"
          echo "Available Python packages:"
          pip list | grep -E "(faiss|transformers|torch|multilspy)"

          # Check for log files
          if [ -d ".ci-registry/logs" ]; then
            echo "CI Registry logs:"
            ls -la .ci-registry/logs/
          fi

      - name: Check analysis results
        run: |
          if [ -f ".ci-registry/reports/latest-analysis.json" ]; then
            echo "Analysis completed successfully"
            cat .ci-registry/reports/latest-analysis.json
          else
            echo "No analysis results found"
          fi
